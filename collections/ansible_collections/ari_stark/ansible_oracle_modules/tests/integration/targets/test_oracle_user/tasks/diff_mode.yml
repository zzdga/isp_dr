---
- name: "define connection parameters"
  set_fact:
    connection_parameters: &con_param
      service_name: "{{ service_name }}"
      username: "SYS"
      password: "{{ sys_password }}"
      mode: "sysdba"

- name: "create a user"
  oracle_user:
    <<: *con_param
    schema_name: "foo"
    state: "present"
  register: _
  failed_when: _.failed or not _.changed or _.diff.before | length != 2 or _.diff.before.state != 'absent'

- name: "change a user and check before"
  oracle_user:
    <<: *con_param
    schema_name: "foo"
    schema_password: "pass"
    state: "present"
  register: _
  failed_when: |
    _.failed or
    _.diff.before.schema_name != 'foo' or
    _.diff.before.state != 'present' or
    _.diff.before.expired != False or
    _.diff.before.locked != False or
    _.diff.before.default_tablespace != 'USERS' or
    _.diff.before.temporary_tablespace != 'TEMP' or
    _.diff.before.authentication_type != None or
    _.diff.before.profile != 'DEFAULT'

- name: "change a user and check before"
  oracle_user:
    <<: *con_param
    schema_name: "foo"
    state: "present"
    authentication_type: "no_authentication"
  register: _
  failed_when: |
    _.failed or
    _.diff.before.schema_name != 'foo' or
    _.diff.before.schema_password != '**'

- name: "change a user and check after"
  oracle_user:
    <<: *con_param
    schema_name: "foo"
    state: "present"
  register: _
  failed_when: |
    _.failed or
    _.diff.after.schema_name != 'foo' or
    _.diff.after.state != 'present' or
    _.diff.after.expired != False or
    _.diff.after.locked != False or
    _.diff.after.default_tablespace != 'USERS' or
    _.diff.after.temporary_tablespace != 'TEMP' or
    _.diff.after.authentication_type != None or
    _.diff.after.profile != 'DEFAULT'

- name: "delete user"
  oracle_user:
    <<: *con_param
    schema_name: "foo"
    state: "absent"
...
